# This YAML file defines the CICD pipeline which will run on Gitlab. The pipeline is made up of a series of stages,
# each of which contain a number of jobs. Most of the jobs are defined by the centrally managed
# templates https://gitlab.com/ska-telescope/templates-repository. In this file we overwrite parts of some
# of the jobs, and can define our own. For more info see https://docs.gitlab.com/ee/ci/yaml/index.html

# GitLab CI in conjunction with GitLab Runner can use Docker Engine to test and build any application.
# Docker, when used with GitLab CI, runs each job in a separate and isolated container using the predefined image that is set up in .gitlab-ci.yml.
# In this case we use the latest python docker image to build and test this project.
image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE

default:
  tags:
    - k8srunner

# Standardised included jobs
variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - deploy
  - test
  - cleanup
  - lint
  - publish
  - integration
  - staging
  - pages
  - scan

.info_script: &info_script
    - |-
      echo "Status of pods in $KUBE_NAMESPACE namespace:"
      kubectl get pods -n $KUBE_NAMESPACE -o jsonpath="{range .items[*]}{'Pod: '}{.metadata.name}:{'\n'}{'\t'}{'Image: '}{.spec.containers[*].image}{'\n'}{'\t'}{'Status: '}{.status.phase}{'\n'}{end}{'\n'}"
      echo "Address to connect to the deployment of the OET API: "
      echo "  https://k8s.stfc.skao.int/$KUBE_NAMESPACE/ska-oso-pht-services/pht/api/v1"
      echo "Address to connect to the Swagger UI for the deployment: "
      echo "  https://k8s.stfc.skao.int/$KUBE_NAMESPACE/ska-oso-pht-services/pht/api/v1/ui/"

# Currently, the dev template uses ci-dev-$CI_PROJECT_NAME which means only one branch can be deployed at a time, so we overwrite this
.dev_env: &dev_env
  variables:
    KUBE_NAMESPACE: "dev-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
  environment:
    name: "dev-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"

info-dev-environment:
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  stage: deploy
  variables:
    KUBE_NAMESPACE: "dev-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
  tags:
    - k8srunner
  when: manual
  environment:
    name: "dev-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
  script:
    - *info_script


#info-dev-environment:
#  <<: *dev_env

info-integration:
  script:
    - *info_script

info-staging:
  script:
    - *info_script
  needs:
    - oci-image-build

deploy-dev-environment:
  variables:
    KUBE_NAMESPACE: "dev-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  tags:
    - k8srunner
  stage: deploy
  when: manual
  script:
    - make k8s-install-chart
  environment:
    name: "dev-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
    on_stop: stop-dev-environment
    auto_stop_in: 4 hours
  needs:
    - oci-image-build

stop-dev-environment:
  image: $SKA_K8S_TOOLS_BUILD_DEPLOY
  tags:
    - k8srunner
  stage: deploy
  variables:
    KUBE_NAMESPACE: "dev-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
  script:
    - make k8s-uninstall-chart
    - kubectl -n $KUBE_NAMESPACE delete pods,svc,daemonsets,deployments,replicasets,statefulsets,cronjobs,jobs,ingresses,configmaps --all
    - make k8s-delete-namespace
  when: manual
  environment:
    name: "dev-$CI_PROJECT_NAME-$CI_COMMIT_REF_SLUG"
    action: stop


include:
  # Python
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/python.gitlab-ci.yml"
  # OCI
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/oci-image.gitlab-ci.yml"
  # Helm Chart linting and Publish
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/helm-chart.gitlab-ci.yml'
  # Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs.gitlab-ci.yml'
  # .post step finalisers eg: badges
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/finaliser.gitlab-ci.yml"
  # change log
  - project: "ska-telescope/templates-repository"
    file: "gitlab-ci/includes/changelog.gitlab-ci.yml"
  # release notes
  - project: 'ska-telescope/templates-repository'
    file: "gitlab-ci/includes/release.gitlab-ci.yml"
  # k8s steps
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/k8s.gitlab-ci.yml'

