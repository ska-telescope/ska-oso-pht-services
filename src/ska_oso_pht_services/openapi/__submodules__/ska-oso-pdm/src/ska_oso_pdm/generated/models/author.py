# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ska_oso_pdm.generated.models.base_model_ import Model
from ska_oso_pdm.generated import util


class Author(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pis=None, cois=None):  # noqa: E501
        """Author - a model defined in OpenAPI

        :param pis: The pis of this Author.  # noqa: E501
        :type pis: list[str]
        :param cois: The cois of this Author.  # noqa: E501
        :type cois: list[str]
        """
        self.openapi_types = {
            'pis': list[str],
            'cois': list[str]
        }

        self.attribute_map = {
            'pis': 'pis',
            'cois': 'cois'
        }

        self._pis = pis
        self._cois = cois

    @classmethod
    def from_dict(cls, dikt) -> 'Author':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Author of this Author.  # noqa: E501
        :rtype: Author
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pis(self):
        """Gets the pis of this Author.


        :return: The pis of this Author.
        :rtype: list[str]
        """
        return self._pis

    @pis.setter
    def pis(self, pis):
        """Sets the pis of this Author.


        :param pis: The pis of this Author.
        :type pis: list[str]
        """

        self._pis = pis

    @property
    def cois(self):
        """Gets the cois of this Author.


        :return: The cois of this Author.
        :rtype: list[str]
        """
        return self._cois

    @cois.setter
    def cois(self, cois):
        """Sets the cois of this Author.


        :param cois: The cois of this Author.
        :type cois: list[str]
        """

        self._cois = cois
