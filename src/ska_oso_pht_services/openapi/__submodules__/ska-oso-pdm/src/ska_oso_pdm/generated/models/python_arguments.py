# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ska_oso_pdm.generated.models.base_model_ import Model
from ska_oso_pdm.generated.models.python_arguments_args_inner import PythonArgumentsArgsInner
from ska_oso_pdm.generated import util

from ska_oso_pdm.generated.models.python_arguments_args_inner import PythonArgumentsArgsInner  # noqa: E501

class PythonArguments(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, args=None, kwargs=None):  # noqa: E501
        """PythonArguments - a model defined in OpenAPI

        :param args: The args of this PythonArguments.  # noqa: E501
        :type args: List[PythonArgumentsArgsInner]
        :param kwargs: The kwargs of this PythonArguments.  # noqa: E501
        :type kwargs: object
        """
        self.openapi_types = {
            'args': List[PythonArgumentsArgsInner],
            'kwargs': object
        }

        self.attribute_map = {
            'args': 'args',
            'kwargs': 'kwargs'
        }

        self._args = args
        self._kwargs = kwargs

    @classmethod
    def from_dict(cls, dikt) -> 'PythonArguments':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PythonArguments of this PythonArguments.  # noqa: E501
        :rtype: PythonArguments
        """
        return util.deserialize_model(dikt, cls)

    @property
    def args(self):
        """Gets the args of this PythonArguments.


        :return: The args of this PythonArguments.
        :rtype: List[PythonArgumentsArgsInner]
        """
        return self._args

    @args.setter
    def args(self, args):
        """Sets the args of this PythonArguments.


        :param args: The args of this PythonArguments.
        :type args: List[PythonArgumentsArgsInner]
        """

        self._args = args

    @property
    def kwargs(self):
        """Gets the kwargs of this PythonArguments.


        :return: The kwargs of this PythonArguments.
        :rtype: object
        """
        return self._kwargs

    @kwargs.setter
    def kwargs(self, kwargs):
        """Sets the kwargs of this PythonArguments.


        :param kwargs: The kwargs of this PythonArguments.
        :type kwargs: object
        """

        self._kwargs = kwargs
