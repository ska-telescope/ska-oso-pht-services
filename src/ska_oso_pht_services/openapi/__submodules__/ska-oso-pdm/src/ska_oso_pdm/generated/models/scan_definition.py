# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ska_oso_pdm.generated.models.base_model_ import Model
from ska_oso_pdm.generated import util


class ScanDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scan_definition_id=None, scan_type=None, scan_duration=None, target=None, dish_configuration=None, target_beam_configurations=None, csp_configuration=None):  # noqa: E501
        """ScanDefinition - a model defined in OpenAPI

        :param scan_definition_id: The scan_definition_id of this ScanDefinition.  # noqa: E501
        :type scan_definition_id: str
        :param scan_type: The scan_type of this ScanDefinition.  # noqa: E501
        :type scan_type: str
        :param scan_duration: The scan_duration of this ScanDefinition.  # noqa: E501
        :type scan_duration: int
        :param target: The target of this ScanDefinition.  # noqa: E501
        :type target: str
        :param dish_configuration: The dish_configuration of this ScanDefinition.  # noqa: E501
        :type dish_configuration: str
        :param target_beam_configurations: The target_beam_configurations of this ScanDefinition.  # noqa: E501
        :type target_beam_configurations: List[str]
        :param csp_configuration: The csp_configuration of this ScanDefinition.  # noqa: E501
        :type csp_configuration: str
        """
        self.openapi_types = {
            'scan_definition_id': str,
            'scan_type': str,
            'scan_duration': int,
            'target': str,
            'dish_configuration': str,
            'target_beam_configurations': List[str],
            'csp_configuration': str
        }

        self.attribute_map = {
            'scan_definition_id': 'scan_definition_id',
            'scan_type': 'scan_type',
            'scan_duration': 'scan_duration',
            'target': 'target',
            'dish_configuration': 'dish_configuration',
            'target_beam_configurations': 'target_beam_configurations',
            'csp_configuration': 'csp_configuration'
        }

        self._scan_definition_id = scan_definition_id
        self._scan_type = scan_type
        self._scan_duration = scan_duration
        self._target = target
        self._dish_configuration = dish_configuration
        self._target_beam_configurations = target_beam_configurations
        self._csp_configuration = csp_configuration

    @classmethod
    def from_dict(cls, dikt) -> 'ScanDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ScanDefinition of this ScanDefinition.  # noqa: E501
        :rtype: ScanDefinition
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scan_definition_id(self):
        """Gets the scan_definition_id of this ScanDefinition.


        :return: The scan_definition_id of this ScanDefinition.
        :rtype: str
        """
        return self._scan_definition_id

    @scan_definition_id.setter
    def scan_definition_id(self, scan_definition_id):
        """Sets the scan_definition_id of this ScanDefinition.


        :param scan_definition_id: The scan_definition_id of this ScanDefinition.
        :type scan_definition_id: str
        """
        if scan_definition_id is None:
            raise ValueError("Invalid value for `scan_definition_id`, must not be `None`")  # noqa: E501

        self._scan_definition_id = scan_definition_id

    @property
    def scan_type(self):
        """Gets the scan_type of this ScanDefinition.


        :return: The scan_type of this ScanDefinition.
        :rtype: str
        """
        return self._scan_type

    @scan_type.setter
    def scan_type(self, scan_type):
        """Sets the scan_type of this ScanDefinition.


        :param scan_type: The scan_type of this ScanDefinition.
        :type scan_type: str
        """

        self._scan_type = scan_type

    @property
    def scan_duration(self):
        """Gets the scan_duration of this ScanDefinition.


        :return: The scan_duration of this ScanDefinition.
        :rtype: int
        """
        return self._scan_duration

    @scan_duration.setter
    def scan_duration(self, scan_duration):
        """Sets the scan_duration of this ScanDefinition.


        :param scan_duration: The scan_duration of this ScanDefinition.
        :type scan_duration: int
        """
        if scan_duration is None:
            raise ValueError("Invalid value for `scan_duration`, must not be `None`")  # noqa: E501

        self._scan_duration = scan_duration

    @property
    def target(self):
        """Gets the target of this ScanDefinition.


        :return: The target of this ScanDefinition.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this ScanDefinition.


        :param target: The target of this ScanDefinition.
        :type target: str
        """

        self._target = target

    @property
    def dish_configuration(self):
        """Gets the dish_configuration of this ScanDefinition.


        :return: The dish_configuration of this ScanDefinition.
        :rtype: str
        """
        return self._dish_configuration

    @dish_configuration.setter
    def dish_configuration(self, dish_configuration):
        """Sets the dish_configuration of this ScanDefinition.


        :param dish_configuration: The dish_configuration of this ScanDefinition.
        :type dish_configuration: str
        """

        self._dish_configuration = dish_configuration

    @property
    def target_beam_configurations(self):
        """Gets the target_beam_configurations of this ScanDefinition.


        :return: The target_beam_configurations of this ScanDefinition.
        :rtype: List[str]
        """
        return self._target_beam_configurations

    @target_beam_configurations.setter
    def target_beam_configurations(self, target_beam_configurations):
        """Sets the target_beam_configurations of this ScanDefinition.


        :param target_beam_configurations: The target_beam_configurations of this ScanDefinition.
        :type target_beam_configurations: List[str]
        """

        self._target_beam_configurations = target_beam_configurations

    @property
    def csp_configuration(self):
        """Gets the csp_configuration of this ScanDefinition.


        :return: The csp_configuration of this ScanDefinition.
        :rtype: str
        """
        return self._csp_configuration

    @csp_configuration.setter
    def csp_configuration(self, csp_configuration):
        """Sets the csp_configuration of this ScanDefinition.


        :param csp_configuration: The csp_configuration of this ScanDefinition.
        :type csp_configuration: str
        """

        self._csp_configuration = csp_configuration
