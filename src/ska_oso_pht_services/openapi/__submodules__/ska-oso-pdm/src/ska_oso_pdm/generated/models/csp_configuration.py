# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ska_oso_pdm.generated.models.base_model_ import Model
from ska_oso_pdm.generated.models.cbf_configuration import CBFConfiguration
from ska_oso_pdm.generated.models.common_configuration import CommonConfiguration
from ska_oso_pdm.generated.models.subarray_configuration import SubarrayConfiguration
from ska_oso_pdm.generated import util

from ska_oso_pdm.generated.models.cbf_configuration import CBFConfiguration  # noqa: E501
from ska_oso_pdm.generated.models.common_configuration import CommonConfiguration  # noqa: E501
from ska_oso_pdm.generated.models.subarray_configuration import SubarrayConfiguration  # noqa: E501

class CSPConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, common=None, subarray=None, config_id=None, cbf=None):  # noqa: E501
        """CSPConfiguration - a model defined in OpenAPI

        :param common: The common of this CSPConfiguration.  # noqa: E501
        :type common: CommonConfiguration
        :param subarray: The subarray of this CSPConfiguration.  # noqa: E501
        :type subarray: SubarrayConfiguration
        :param config_id: The config_id of this CSPConfiguration.  # noqa: E501
        :type config_id: str
        :param cbf: The cbf of this CSPConfiguration.  # noqa: E501
        :type cbf: CBFConfiguration
        """
        self.openapi_types = {
            'common': CommonConfiguration,
            'subarray': SubarrayConfiguration,
            'config_id': str,
            'cbf': CBFConfiguration
        }

        self.attribute_map = {
            'common': 'common',
            'subarray': 'subarray',
            'config_id': 'config_id',
            'cbf': 'cbf'
        }

        self._common = common
        self._subarray = subarray
        self._config_id = config_id
        self._cbf = cbf

    @classmethod
    def from_dict(cls, dikt) -> 'CSPConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CSPConfiguration of this CSPConfiguration.  # noqa: E501
        :rtype: CSPConfiguration
        """
        return util.deserialize_model(dikt, cls)

    @property
    def common(self):
        """Gets the common of this CSPConfiguration.


        :return: The common of this CSPConfiguration.
        :rtype: CommonConfiguration
        """
        return self._common

    @common.setter
    def common(self, common):
        """Sets the common of this CSPConfiguration.


        :param common: The common of this CSPConfiguration.
        :type common: CommonConfiguration
        """

        self._common = common

    @property
    def subarray(self):
        """Gets the subarray of this CSPConfiguration.


        :return: The subarray of this CSPConfiguration.
        :rtype: SubarrayConfiguration
        """
        return self._subarray

    @subarray.setter
    def subarray(self, subarray):
        """Sets the subarray of this CSPConfiguration.


        :param subarray: The subarray of this CSPConfiguration.
        :type subarray: SubarrayConfiguration
        """

        self._subarray = subarray

    @property
    def config_id(self):
        """Gets the config_id of this CSPConfiguration.


        :return: The config_id of this CSPConfiguration.
        :rtype: str
        """
        return self._config_id

    @config_id.setter
    def config_id(self, config_id):
        """Sets the config_id of this CSPConfiguration.


        :param config_id: The config_id of this CSPConfiguration.
        :type config_id: str
        """

        self._config_id = config_id

    @property
    def cbf(self):
        """Gets the cbf of this CSPConfiguration.


        :return: The cbf of this CSPConfiguration.
        :rtype: CBFConfiguration
        """
        return self._cbf

    @cbf.setter
    def cbf(self, cbf):
        """Sets the cbf of this CSPConfiguration.


        :param cbf: The cbf of this CSPConfiguration.
        :type cbf: CBFConfiguration
        """

        self._cbf = cbf
