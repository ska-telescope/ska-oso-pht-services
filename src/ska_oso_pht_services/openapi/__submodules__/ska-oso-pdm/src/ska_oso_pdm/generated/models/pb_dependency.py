# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ska_oso_pdm.generated.models.base_model_ import Model
from ska_oso_pdm.generated import util


class PbDependency(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind=None, pb_id=None):  # noqa: E501
        """PbDependency - a model defined in OpenAPI

        :param kind: The kind of this PbDependency.  # noqa: E501
        :type kind: List[str]
        :param pb_id: The pb_id of this PbDependency.  # noqa: E501
        :type pb_id: str
        """
        self.openapi_types = {
            'kind': List[str],
            'pb_id': str
        }

        self.attribute_map = {
            'kind': 'kind',
            'pb_id': 'pb_id'
        }

        self._kind = kind
        self._pb_id = pb_id

    @classmethod
    def from_dict(cls, dikt) -> 'PbDependency':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The PbDependency of this PbDependency.  # noqa: E501
        :rtype: PbDependency
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this PbDependency.


        :return: The kind of this PbDependency.
        :rtype: List[str]
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this PbDependency.


        :param kind: The kind of this PbDependency.
        :type kind: List[str]
        """

        self._kind = kind

    @property
    def pb_id(self):
        """Gets the pb_id of this PbDependency.


        :return: The pb_id of this PbDependency.
        :rtype: str
        """
        return self._pb_id

    @pb_id.setter
    def pb_id(self, pb_id):
        """Sets the pb_id of this PbDependency.


        :param pb_id: The pb_id of this PbDependency.
        :type pb_id: str
        """

        self._pb_id = pb_id
