# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ska_oso_pdm.generated.models.base_model_ import Model
from ska_oso_pdm.generated.models.pointing_pattern import PointingPattern
from ska_oso_pdm.generated.models.target_reference_coordinate import TargetReferenceCoordinate
from ska_oso_pdm.generated import util

from ska_oso_pdm.generated.models.pointing_pattern import PointingPattern  # noqa: E501
from ska_oso_pdm.generated.models.target_reference_coordinate import TargetReferenceCoordinate  # noqa: E501

class Target(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target_id=None, pointing_pattern=None, reference_coordinate=None):  # noqa: E501
        """Target - a model defined in OpenAPI

        :param target_id: The target_id of this Target.  # noqa: E501
        :type target_id: str
        :param pointing_pattern: The pointing_pattern of this Target.  # noqa: E501
        :type pointing_pattern: PointingPattern
        :param reference_coordinate: The reference_coordinate of this Target.  # noqa: E501
        :type reference_coordinate: TargetReferenceCoordinate
        """
        self.openapi_types = {
            'target_id': str,
            'pointing_pattern': PointingPattern,
            'reference_coordinate': TargetReferenceCoordinate
        }

        self.attribute_map = {
            'target_id': 'target_id',
            'pointing_pattern': 'pointing_pattern',
            'reference_coordinate': 'reference_coordinate'
        }

        self._target_id = target_id
        self._pointing_pattern = pointing_pattern
        self._reference_coordinate = reference_coordinate

    @classmethod
    def from_dict(cls, dikt) -> 'Target':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Target of this Target.  # noqa: E501
        :rtype: Target
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target_id(self):
        """Gets the target_id of this Target.


        :return: The target_id of this Target.
        :rtype: str
        """
        return self._target_id

    @target_id.setter
    def target_id(self, target_id):
        """Sets the target_id of this Target.


        :param target_id: The target_id of this Target.
        :type target_id: str
        """
        if target_id is None:
            raise ValueError("Invalid value for `target_id`, must not be `None`")  # noqa: E501

        self._target_id = target_id

    @property
    def pointing_pattern(self):
        """Gets the pointing_pattern of this Target.


        :return: The pointing_pattern of this Target.
        :rtype: PointingPattern
        """
        return self._pointing_pattern

    @pointing_pattern.setter
    def pointing_pattern(self, pointing_pattern):
        """Sets the pointing_pattern of this Target.


        :param pointing_pattern: The pointing_pattern of this Target.
        :type pointing_pattern: PointingPattern
        """
        if pointing_pattern is None:
            raise ValueError("Invalid value for `pointing_pattern`, must not be `None`")  # noqa: E501

        self._pointing_pattern = pointing_pattern

    @property
    def reference_coordinate(self):
        """Gets the reference_coordinate of this Target.


        :return: The reference_coordinate of this Target.
        :rtype: TargetReferenceCoordinate
        """
        return self._reference_coordinate

    @reference_coordinate.setter
    def reference_coordinate(self, reference_coordinate):
        """Sets the reference_coordinate of this Target.


        :param reference_coordinate: The reference_coordinate of this Target.
        :type reference_coordinate: TargetReferenceCoordinate
        """
        if reference_coordinate is None:
            raise ValueError("Invalid value for `reference_coordinate`, must not be `None`")  # noqa: E501

        self._reference_coordinate = reference_coordinate
