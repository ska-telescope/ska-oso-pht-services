openapi: 3.0.0
info:
  title: Proposal Handling Tool Services API
  description: 'This OpenAPI document defines the API for the Proposal Handling Tool Services (PHT) backend service'
  license:
    name: BSD-3-Clause
    url: https://opensource.org/licenses/BSD-3-Clause
  version: 1.0.0
paths:
  /proposals:
    post:
      summary: Create a proposal
      description: |
        Create a proposal
      operationId: ska_oso_pht_services.api.proposal_create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              #$ref: './prsl-jsonschema.yaml#'
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /proposals/{identifier}:
    parameters:
    - name: identifier
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    get:
      summary: Get a proposal
      description: |
        Get a proposal
      operationId: ska_oso_pht_services.api.proposal_get
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
              # schema:
              #   $ref: './prsl-openapi-v1.yaml#/Proposal'
    put:
      summary: Edit a proposal
      description: |
        Edit a proposal
      operationId: ska_oso_pht_services.api.proposal_edit
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
  /proposals/validate:
    post:
      summary: Validate a proposal
      description: |
        Validate a proposal
      operationId: ska_oso_pht_services.api.proposal_validate
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}
  /proposals/list/{identifier}:
    parameters:
    - name: identifier
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    get:
      summary: Get a list of proposal
      description: |
        Get a list of proposal
      operationId: ska_oso_pht_services.api.proposal_get_list
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                  - type: object
                  # - $ref: './prsl-openapi-v1.yaml#/Proposal'
  /upload/signedurl/{filename}:
    get:
      summary: Upload a pdf
      description: |
        Upload a pdf
      operationId: ska_oso_pht_services.api.upload_pdf
      parameters:
      - name: filename
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: BAD REQUEST
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: INTERNAL SERVER ERROR
          content:
            text/plain:
              schema:
                type: string
  /download/signedurl/{filename}:
    get:
      summary: Download signed url
      description: |
        Download signed url
      operationId: ska_oso_pht_services.api.download_pdf
      parameters:
      - name: filename
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: BAD REQUEST
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: INTERNAL SERVER ERROR
          content:
            text/plain:
              schema:
                type: string
  /delete/signedurl/{filename}:
    get:
      summary: delete signed url
      description: |
        delete signed url
      operationId: ska_oso_pht_services.api.delete_pdf
      parameters:
      - name: filename
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string
        "400":
          description: BAD REQUEST
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: INTERNAL SERVER ERROR
          content:
            text/plain:
              schema:
                type: string
  /coordinates/{identifier}/{reference_frame}:
    get:
      summary: get coordinates
      description: |
        get coordinates
      operationId: ska_oso_pht_services.api.get_systemcoordinates
      parameters:
      - name: identifier
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: reference_frame
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            text/plain:
              schema:
                type: string

  /send-email:
    post:
      summary: Send email
      description: |
        send email
      operationId: ska_oso_pht_services.api.send_email
      requestBody:
        content:
          application/json:
            schema: {}
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema: {}

              
components:
  schemas:
    ValidationResponse:
      type: object
      properties:
        valid:
          type: boolean
        messages:
          type: array
          items:
            type: string
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
        title:
          type: string
        detail:
          type: string
        traceback:
          type: object
          properties:
            key:
              type: string
            type:
              type: string
            full_traceback:
              type: string
