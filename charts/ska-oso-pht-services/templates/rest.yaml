{{ if .Values.rest.enabled }}
{{ if .Values.rest.ingress.enabled }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "ska-oso-pht-services.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ska-oso-pht-services.labels" . | indent 4 }}
    component: {{ .Values.rest.component }}
    function: {{ .Values.rest.function }}
    domain: {{ .Values.rest.domain }}
    intent: production
  annotations:
spec:
  rules:
    - http:
        paths:
          - path: /{{ .Release.Namespace }}/pht/api
            pathType: Prefix
            backend:
              service:
                name: {{ template "ska-oso-pht-services.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}
                port:
                  number: 5000
{{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ template "ska-oso-pht-services.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ska-oso-pht-services.labels" . | indent 4 }}
    component: {{ .Values.rest.component }}
    function: {{ .Values.rest.function }}
    domain: {{ .Values.rest.domain }}
    intent: production
spec:
  ports:
  - port: 5000
  selector:
    app: {{ template "ska-oso-pht-services.name" . }}
    component: {{ .Values.rest.component }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ska-oso-pht-services.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ska-oso-pht-services.labels" . | indent 4 }}
    component: {{ .Values.rest.component }}
    function: {{ .Values.rest.function }}
    domain: {{ .Values.rest.domain }}
    intent: production
spec:
  selector:
    matchLabels:
      app: {{ template "ska-oso-pht-services.name" . }}
      component: {{ .Values.rest.component }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "ska-oso-pht-services.labels" . | indent 8 }}
        component: {{ .Values.rest.component }}
        function: {{ .Values.rest.function }}
        domain: {{ .Values.rest.domain }}
        intent: production
    spec:
      containers:
        - name: pht-services
          image: "{{ .Values.rest.image.registry }}/{{ .Values.rest.image.image }}:{{$.Values.rest.image.tag | default $.Chart.AppVersion}}"
          imagePullPolicy: {{ .Values.rest.image.pullPolicy }}
          command: [ "/bin/sh" ]
          args: [ "-c", "poetry run gunicorn --chdir src --bind 0.0.0.0:5000 --logger-class=ska_oso_pht_services.wsgi.UniformLogger --log-level='{{ .Values.rest.logLevel }}' ska_oso_pht_services.wsgi:app" ]
          envFrom:
            - configMapRef:
                name: {{ template "ska-oso-pht-services.name" . }}-{{ .Values.rest.component }}-{{ .Release.Name }}-environment
          ports:
            - containerPort: 5000
          env: ###
          {{- if .Values.secretProvider.enabled }}
          {{- range .Values.secretProvider.provider.secrets }}
          - name: {{ .targetEnv | default .secretKey }}
              valueFrom:
              secretKeyRef:
                name: {{ $.Values.secretProvider.name }}
                key: {{ .secretKey }}
          {{- end }}
          {{- else }}
          - name: USERNAME
              value: "{{ .Values.global.env.username }}"
          - name : PASSWORD
              value: "{{ .Values.global.env.password }}"
          {{- end }}
          volumeMounts:
          {{- if .Values.secretProvider.enabled }}
            - name: secrets-store-inline
              mountPath: "/mnt/secrets-store"
              readOnly: true
          {{- end }}
          resources:
  {{ toYaml .Values.rest.resources | indent 10 }}
      volumes:
      {{- if .Values.secretProvider.enabled }}
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ .Values.secretProvider.name }}
      {{- end }}
    {{- with .Values.nodeSelector }}
nodeSelector:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{- with .Values.affinity }}
affinity:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{- with .Values.tolerations }}
tolerations:
  {{ toYaml . | indent 8 }}
  {{- end }}
  {{ end }}
